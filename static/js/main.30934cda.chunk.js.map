{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_NAME","SORT_BY_LENGTH","App","sortField","setSortField","useState","isReversed","setIsReversed","visibleGoods","goods","_ref","preparedGoods","sort","good1","good2","length","localeCompare","reverse","getPreparedGoods","_jsxs","className","children","_jsx","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"kOAKO,MAAMA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAe,OACfC,EAAiB,SA2BhB,MAAMC,EAAMA,KACjB,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAAYC,GAAiBF,oBAAS,GACvCG,EA5BR,SAA0BC,EAAKC,GAA8B,IAA5B,UAAEP,EAAS,WAAEG,GAAYI,EACxD,MAAMC,EAAgB,IAAIF,GAqB1B,OAnBIN,GACFQ,EAAcC,MAAK,CAACC,EAAOC,KACzB,OAAQX,GACN,KAAKF,EACH,OAAOY,EAAME,OAASD,EAAMC,OAE9B,KAAKf,EACH,OAAOa,EAAMG,cAAcF,GAE7B,QACE,OAAO,EACX,IAIAR,GACFK,EAAcM,UAGTN,CACT,CAMMO,CAAiBnB,EAAiB,CAAEI,YAAWG,eAEnD,OACEa,eAAA,OAAKC,UAAU,kBAAiBC,SAAA,CAC9BF,eAAA,OAAKC,UAAU,UAASC,SAAA,CACtBC,cAAA,UACEC,QAASA,IAAMnB,EAAaJ,GAC5BwB,KAAK,SACLJ,UAAWK,IACT,SACA,UACA,CACE,WAAYtB,IAAcH,IAE5BqB,SACH,wBAIDC,cAAA,UACEC,QAASA,IAAMnB,EAAaH,GAC5BuB,KAAK,SACLJ,UAAWK,IACT,SACA,aACA,CACE,WAAYtB,IAAcF,IAE5BoB,SACH,mBAIDC,cAAA,UACEC,QAASA,IAAOhB,GAAeD,GAC/BkB,KAAK,SACLJ,UAAWK,IACT,SACA,aACA,CACE,YAA2B,IAAfnB,IAEde,SACH,aAIe,KAAdlB,GAAoBG,IACpBgB,cAAA,UACEC,QAASA,KACPnB,EAAa,IACbG,GAAc,EAAM,EAEtBiB,KAAK,SACLJ,UAAU,4BAA2BC,SACtC,aAMLC,cAAA,MAAAD,SACGb,EAAakB,KAAIC,GAChBL,cAAA,MACE,UAAQ,OAAMD,SAGbM,GAFIA,SAOP,ECvHVC,IAASC,OACPP,cAACpB,EAAG,IACJ4B,SAASC,eAAe,Q","file":"static/js/main.30934cda.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_NAME = 'name';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, isReversed }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        case SORT_BY_NAME:\n          return good1.localeCompare(good2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods\n    = getPreparedGoods(goodsFromServer, { sortField, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_BY_NAME)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            {\n              'is-light': sortField !== SORT_BY_NAME,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_BY_LENGTH)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            {\n              'is-light': sortField !== SORT_BY_LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => (setIsReversed(!isReversed))}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            {\n              'is-light': isReversed !== true,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReversed) && (\n          <button\n            onClick={() => {\n              setSortField('');\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))\n        }\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}